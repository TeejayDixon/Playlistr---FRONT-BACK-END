{"ast":null,"code":"var _jsxFileName = \"/home/teejaydixon/code/phase-3/phase-3-project/phase-3-sinatra-react-project/client/src/pages/MusicContainer.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport '../index.css';\nimport SongsContainer from '../Components/SongsContainer';\nimport PlaylistsContainer from './PlaylistsContainer';\n\nfunction MusicContainer() {\n  // const [songs, setSongs] = useState([])\n  // const [playlists, setPlaylists] = useState([])\n  // const [selectedPlaylists, setSelectedPlaylists] = useState([])\n  // useEffect(() => { \n  //   fetch('http://localhost:9292/playlists')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       setPlaylists(data)\n  //       setSelectedPlaylists(data[0])\n  //     })\n  //   fetch('http://localhost:9292/songs')\n  //     .then(res => res.json())\n  //     .then(data => setSongs(data))\n  // }, [])\n  // function addToPlaylists(playlistID,id) {\n  //   fetch('http://localhost:9292/songitems', {\n  //     method: 'POST',\n  //     headers: { \"Content-Type\": \"application/json\", },\n  //     body: JSON.stringify({ playlist_id: playlistID, track_id: id})\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  // }\n  // function Spotify() {\n  //   useEffect(() => { \n  //   fetch('http://localhost:3000')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       setPlaylists(data)\n  //       setSelectedPlaylists(data[0])\n  //     })\n  // }, [])\n  // }\n  // function refreshedPlaylists() {\n  //    fetch('http://localhost:9292/playlists')\n  //     .then(res => res.json())\n  //      .then(setPlaylists)\n  //    fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}`)\n  //     .then(res => res.json())\n  //     .then(setSelectedPlaylists)\n  // }\n  // function removeFromPlaylists(songID) {\n  //   fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}/songs/${songID}`, {\n  //     method: 'DELETE'\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  // }\n  // function handleRatingSubmit(newRating, songitemID) {\n  //   fetch(`http://localhost:9292/songitems/${songitemID}`, {\n  //     method: 'PATCH',\n  //     headers: { 'Content-Type': 'application/json', },\n  //     body: JSON.stringify({rating: parseInt(newRating)})\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  // }\n  // function addNewPlaylists(newPlaylists) {\n  //   fetch(`http://localhost:9292/playlists`, {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json', },\n  //     body: JSON.stringify({ playlist_name: newPlaylists })\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  //   }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"library\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SongsContainer, {\n    addToPlaylists: addToPlaylists,\n    playlists: playlists,\n    songs: songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlaylistsContainer, {\n    addNewPlaylists: addNewPlaylists,\n    removeFromPlaylists: removeFromPlaylists,\n    playlists: playlists,\n    selectedPlaylists: selectedPlaylists,\n    setSelectedPlaylists: setSelectedPlaylists,\n    handleRatingSubmit: handleRatingSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MusicContainer;","map":{"version":3,"names":["React","useState","useEffect","Header","SongsContainer","PlaylistsContainer","MusicContainer","addToPlaylists","playlists","songs","addNewPlaylists","removeFromPlaylists","selectedPlaylists","setSelectedPlaylists","handleRatingSubmit"],"sources":["/home/teejaydixon/code/phase-3/phase-3-project/phase-3-sinatra-react-project/client/src/pages/MusicContainer.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react'\nimport Header from './Header'\nimport '../index.css';\nimport SongsContainer from '../Components/SongsContainer'\nimport PlaylistsContainer from './PlaylistsContainer';\n\nfunction MusicContainer() {\n  // const [songs, setSongs] = useState([])\n\n  // const [playlists, setPlaylists] = useState([])\n\n  // const [selectedPlaylists, setSelectedPlaylists] = useState([])\n\n  \n  \n  // useEffect(() => { \n  //   fetch('http://localhost:9292/playlists')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       setPlaylists(data)\n  //       setSelectedPlaylists(data[0])\n  //     })\n  //   fetch('http://localhost:9292/songs')\n  //     .then(res => res.json())\n  //     .then(data => setSongs(data))\n      \n    \n  // }, [])\n\n\n  // function addToPlaylists(playlistID,id) {\n  //   fetch('http://localhost:9292/songitems', {\n  //     method: 'POST',\n  //     headers: { \"Content-Type\": \"application/json\", },\n  //     body: JSON.stringify({ playlist_id: playlistID, track_id: id})\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n    \n  // }\n\n\n  // function Spotify() {\n    \n    \n  //   useEffect(() => { \n  //   fetch('http://localhost:3000')\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       setPlaylists(data)\n  //       setSelectedPlaylists(data[0])\n  //     })\n\n  // }, [])\n  // }\n\n\n  // function refreshedPlaylists() {\n  //    fetch('http://localhost:9292/playlists')\n  //     .then(res => res.json())\n  //      .then(setPlaylists)\n  //    fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}`)\n  //     .then(res => res.json())\n  //     .then(setSelectedPlaylists)\n  // }\n\n\n  // function removeFromPlaylists(songID) {\n  //   fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}/songs/${songID}`, {\n  //     method: 'DELETE'\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  // }\n\n\n  // function handleRatingSubmit(newRating, songitemID) {\n  //   fetch(`http://localhost:9292/songitems/${songitemID}`, {\n  //     method: 'PATCH',\n  //     headers: { 'Content-Type': 'application/json', },\n  //     body: JSON.stringify({rating: parseInt(newRating)})\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  // }\n\n  // function addNewPlaylists(newPlaylists) {\n  //   fetch(`http://localhost:9292/playlists`, {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json', },\n  //     body: JSON.stringify({ playlist_name: newPlaylists })\n  //   }).then(response => {\n  //     if (response.ok){refreshedPlaylists()}\n  //   })\n  //   }\n  \n\n\n  \n\n \n\n  return (\n  \n    \n    <div>\n      <div className='library'>\n        <Header />\n        <SongsContainer addToPlaylists={addToPlaylists} playlists={playlists} songs={songs} /> \n        </div>\n        \n        <div>\n        <PlaylistsContainer\n          addNewPlaylists={addNewPlaylists}\n          removeFromPlaylists={removeFromPlaylists}\n          playlists={playlists}\n          selectedPlaylists={selectedPlaylists}\n          setSelectedPlaylists={setSelectedPlaylists}\n          handleRatingSubmit={handleRatingSubmit}\n        />\n      </div>\n      \n      \n   </div>\n    \n\n  )\n  }\n\nexport default MusicContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,cAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,cAAT,GAA0B;EACxB;EAEA;EAEA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAGA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAQA,oBAGE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,cAAD;IAAgB,cAAc,EAAEC,cAAhC;IAAgD,SAAS,EAAEC,SAA3D;IAAsE,KAAK,EAAEC,KAA7E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF,eAMI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,kBAAD;IACE,eAAe,EAAEC,eADnB;IAEE,mBAAmB,EAAEC,mBAFvB;IAGE,SAAS,EAAEH,SAHb;IAIE,iBAAiB,EAAEI,iBAJrB;IAKE,oBAAoB,EAAEC,oBALxB;IAME,kBAAkB,EAAEC,kBANtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADA,CANJ,CAHF;AAyBC;;AAEH,eAAeR,cAAf"},"metadata":{},"sourceType":"module"}