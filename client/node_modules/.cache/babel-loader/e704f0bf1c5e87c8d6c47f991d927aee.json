{"ast":null,"code":"import _slicedToArray from \"/home/teejaydixon/code/phase-3/phase-3-project/phase-3-sinatra-react-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/teejaydixon/code/phase-3/phase-3-project/phase-3-sinatra-react-project/client/src/pages/MusicContainer.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport '../index.css';\nimport SongsContainer from '../Components/SongsContainer';\nimport PlaylistsContainer from './PlaylistsContainer';\n\nfunction MusicContainer() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      songs = _useState2[0],\n      setSongs = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playlists = _useState4[0],\n      setPlaylists = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedPlaylists = _useState6[0],\n      setSelectedPlaylists = _useState6[1];\n\n  useEffect(function () {\n    fetch('http://localhost:9292/playlists').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setPlaylists(data);\n      setSelectedPlaylists(data[0]);\n    });\n    fetch('http://localhost:9292/songs').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setSongs(data);\n    });\n  }, []);\n\n  function addToPlaylists(playlistID, id) {\n    fetch('http://localhost:9292/songitems', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        playlist_id: playlistID,\n        track_id: id\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        refreshedPlaylists();\n      }\n    });\n  }\n\n  function Spotify() {\n    useEffect(function () {\n      fetch('http://localhost:3000').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        setPlaylists(data);\n        setSelectedPlaylists(data[0]);\n      });\n    }, []);\n  }\n\n  function refreshedPlaylists() {\n    fetch('http://localhost:9292/playlists').then(function (res) {\n      return res.json();\n    }).then(setPlaylists);\n    fetch(\"http://localhost:9292/playlists/\".concat(selectedPlaylists.id)).then(function (res) {\n      return res.json();\n    }).then(setSelectedPlaylists);\n  }\n\n  function removeFromPlaylists(songID) {\n    fetch(\"http://localhost:9292/playlists/\".concat(selectedPlaylists.id, \"/songs/\").concat(songID), {\n      method: 'DELETE'\n    }).then(function (response) {\n      if (response.ok) {\n        refreshedPlaylists();\n      }\n    });\n  }\n\n  function handleRatingSubmit(newRating, songitemID) {\n    fetch(\"http://localhost:9292/songitems/\".concat(songitemID), {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        rating: parseInt(newRating)\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        refreshedPlaylists();\n      }\n    });\n  }\n\n  function addNewPlaylists(newPlaylists) {\n    fetch(\"http://localhost:9292/playlists\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        playlist_name: newPlaylists\n      })\n    }).then(function (response) {\n      if (response.ok) {\n        refreshedPlaylists();\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SongsContainer, {\n    addToPlaylists: addToPlaylists,\n    playlists: playlists,\n    songs: songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlaylistsContainer, {\n    addNewPlaylists: addNewPlaylists,\n    removeFromPlaylists: removeFromPlaylists,\n    playlists: playlists,\n    selectedPlaylists: selectedPlaylists,\n    setSelectedPlaylists: setSelectedPlaylists,\n    handleRatingSubmit: handleRatingSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MusicContainer;","map":{"version":3,"names":["React","useState","useEffect","Header","SongsContainer","PlaylistsContainer","MusicContainer","songs","setSongs","playlists","setPlaylists","selectedPlaylists","setSelectedPlaylists","fetch","then","res","json","data","addToPlaylists","playlistID","id","method","headers","body","JSON","stringify","playlist_id","track_id","response","ok","refreshedPlaylists","Spotify","removeFromPlaylists","songID","handleRatingSubmit","newRating","songitemID","rating","parseInt","addNewPlaylists","newPlaylists","playlist_name"],"sources":["/home/teejaydixon/code/phase-3/phase-3-project/phase-3-sinatra-react-project/client/src/pages/MusicContainer.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react'\nimport Header from './Header'\nimport '../index.css';\nimport SongsContainer from '../Components/SongsContainer'\nimport PlaylistsContainer from './PlaylistsContainer';\n\nfunction MusicContainer() {\n  const [songs, setSongs] = useState([])\n\n  const [playlists, setPlaylists] = useState([])\n\n  const [selectedPlaylists, setSelectedPlaylists] = useState([])\n\n  \n  \n  useEffect(() => { \n    fetch('http://localhost:9292/playlists')\n      .then(res => res.json())\n      .then(data => {\n        setPlaylists(data)\n        setSelectedPlaylists(data[0])\n      })\n    fetch('http://localhost:9292/songs')\n      .then(res => res.json())\n      .then(data => setSongs(data))\n      \n    \n  }, [])\n\n\n  function addToPlaylists(playlistID,id) {\n    fetch('http://localhost:9292/songitems', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\", },\n      body: JSON.stringify({ playlist_id: playlistID, track_id: id})\n    }).then(response => {\n      if (response.ok){refreshedPlaylists()}\n    })\n    \n  }\n\n\n  function Spotify() {\n    \n    \n    useEffect(() => { \n    fetch('http://localhost:3000')\n      .then(res => res.json())\n      .then(data => {\n        setPlaylists(data)\n        setSelectedPlaylists(data[0])\n      })\n\n  }, [])\n  }\n\n\n  function refreshedPlaylists() {\n     fetch('http://localhost:9292/playlists')\n      .then(res => res.json())\n       .then(setPlaylists)\n     fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}`)\n      .then(res => res.json())\n      .then(setSelectedPlaylists)\n  }\n\n\n  function removeFromPlaylists(songID) {\n    fetch(`http://localhost:9292/playlists/${selectedPlaylists.id}/songs/${songID}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok){refreshedPlaylists()}\n    })\n  }\n\n\n  function handleRatingSubmit(newRating, songitemID) {\n    fetch(`http://localhost:9292/songitems/${songitemID}`, {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json', },\n      body: JSON.stringify({rating: parseInt(newRating)})\n    }).then(response => {\n      if (response.ok){refreshedPlaylists()}\n    })\n  }\n\n  function addNewPlaylists(newPlaylists) {\n    fetch(`http://localhost:9292/playlists`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', },\n      body: JSON.stringify({ playlist_name: newPlaylists })\n    }).then(response => {\n      if (response.ok){refreshedPlaylists()}\n    })\n    }\n  \n\n\n  \n\n \n\n  return (\n  \n    \n    <div className=\"cards\">\n\n      \n      <div >\n        <SongsContainer addToPlaylists={addToPlaylists} playlists={playlists} songs={songs} /> \n        </div>\n        \n        <div>\n        <PlaylistsContainer\n          addNewPlaylists={addNewPlaylists}\n          removeFromPlaylists={removeFromPlaylists}\n          playlists={playlists}\n          selectedPlaylists={selectedPlaylists}\n          setSelectedPlaylists={setSelectedPlaylists}\n          handleRatingSubmit={handleRatingSubmit}\n        />\n      </div>\n      \n      \n   </div>\n    \n\n  )\n  }\n\nexport default MusicContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}